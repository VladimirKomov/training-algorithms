# üß∞ Python Collections Cheatsheet (–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∏ –∏—Ö –º–µ—Ç–æ–¥—ã)
---
## ‚úÖ list (—Å–ø–∏—Å–æ–∫)
- `append(x)` ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ–Ω–µ—Ü
- `extend(iterable)` ‚Äî —Ä–∞—Å—à–∏—Ä–∏—Ç—å –¥—Ä—É–≥–∏–º —Å–ø–∏—Å–∫–æ–º
- `insert(i, x)` ‚Äî –≤—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –ø–æ–∑–∏—Ü–∏—é
- `remove(x)` ‚Äî —É–¥–∞–ª–∏—Ç—å –ø–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ
- `pop([i])` ‚Äî —É–¥–∞–ª–∏—Ç—å –∏ –≤–µ—Ä–Ω—É—Ç—å —ç–ª–µ–º–µ–Ω—Ç –ø–æ –∏–Ω–¥–µ–∫—Å—É (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ—Å–ª–µ–¥–Ω–∏–π)
- `clear()` ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫
- `index(x)` ‚Äî –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è
- `count(x)` ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π
- `sort()` / `sorted()` ‚Äî —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
- `reverse()` ‚Äî —Ä–∞–∑–≤–æ—Ä–æ—Ç —Å–ø–∏—Å–∫–∞
- `copy()` ‚Äî –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω–∞—è –∫–æ–ø–∏—è
- `len(lst)` ‚Äî –¥–ª–∏–Ω–∞ —Å–ø–∏—Å–∫–∞
- `in` ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è
---
## ‚úÖ dict (—Å–ª–æ–≤–∞—Ä—å)
- `get(key[, default])` ‚Äî –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ
- `keys()` / `values()` / `items()` ‚Äî –∏—Ç–µ—Ä–∞—Ü–∏–∏ –ø–æ –∫–ª—é—á–∞–º, –∑–Ω–∞—á–µ–Ω–∏—è–º, –ø–∞—Ä–∞–º
- `update(other_dict)` ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –∫–ª—é—á–∏ –∏–∑ –¥—Ä—É–≥–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è
- `pop(key[, default])` ‚Äî —É–¥–∞–ª–∏—Ç—å –∏ –≤–µ—Ä–Ω—É—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ
- `popitem()` ‚Äî —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –ø–∞—Ä—É
- `setdefault(key, default)` ‚Äî –µ—Å–ª–∏ –Ω–µ—Ç –∫–ª—é—á–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ
- `clear()` ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å —Å–ª–æ–≤–∞—Ä—å
- `copy()` ‚Äî –∫–æ–ø–∏—è —Å–ª–æ–≤–∞—Ä—è
- `in` ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–∞
- `del d[key]` ‚Äî —É–¥–∞–ª–∏—Ç—å –ø–æ –∫–ª—é—á—É
---
## ‚úÖ set (–º–Ω–æ–∂–µ—Å—Ç–≤–æ)
- `add(x)` ‚Äî –¥–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç
- `remove(x)` / `discard(x)` ‚Äî —É–¥–∞–ª–∏—Ç—å (–≤—Ç–æ—Ä–æ–π ‚Äî –±–µ–∑ –æ—à–∏–±–∫–∏)
- `pop()` ‚Äî —É–¥–∞–ª–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
- `clear()` ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å
- `union(set2)` / `|` ‚Äî –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ
- `intersection(set2)` / `&` ‚Äî –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ
- `difference(set2)` / `-` ‚Äî —Ä–∞–∑–Ω–æ—Å—Ç—å
- `symmetric_difference(set2)` / `^` ‚Äî —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω–∞—è —Ä–∞–∑–Ω–æ—Å—Ç—å
- `issubset(set2)` / `<=` ‚Äî –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–æ
- `issuperset(set2)` / `>=` ‚Äî –Ω–∞–¥–º–Ω–æ–∂–µ—Å—Ç–≤–æ
- `copy()` ‚Äî –∫–æ–ø–∏—è
---
## ‚úÖ tuple (–∫–æ—Ä—Ç–µ–∂)
- `count(x)` ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π
- `index(x)` ‚Äî –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è
- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å—Ä–µ–∑—ã, `len()`, `in`, —Ä–∞—Å–ø–∞–∫–æ–≤–∫—É (`a, b = t`)
---
## ‚úÖ collections.Counter
```python
from collections import Counter
Counter("hello")  # Counter({'l': 2, 'h': 1, 'e': 1, 'o': 1})
```
- `most_common(n)` ‚Äî n —Å–∞–º—ã—Ö —á–∞—Å—Ç—ã—Ö
- `elements()` ‚Äî –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
- `subtract()` ‚Äî –≤—ã—á–∏—Ç–∞–Ω–∏–µ —Å—á—ë—Ç—á–∏–∫–æ–≤
---
## ‚úÖ collections.defaultdict
```python
from collections import defaultdict
d = defaultdict(int)  # –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é = 0
d["a"] += 1
```
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë—Ç –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –∫–ª—é—á–∞ –Ω–µ—Ç
---
## ‚úÖ deque (–¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è –æ—á–µ—Ä–µ–¥—å)
```python
from collections import deque
q = deque([1, 2, 3])
q.append(4)
q.appendleft(0)
q.pop()
q.popleft()
```
- –ë—ã—Å—Ç—Ä–∞—è –≤—Å—Ç–∞–≤–∫–∞/—É–¥–∞–ª–µ–Ω–∏–µ —Å –æ–±–µ–∏—Ö —Å—Ç–æ—Ä–æ–Ω
- `rotate(n)` ‚Äî —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–π —Å–¥–≤–∏–≥
- `extend`, `extendleft`